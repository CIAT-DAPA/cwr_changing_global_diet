p <- 40 # partner = Austria
rg <- "all" # trade flow
cc <- "TOTAL" # total of all commodities
comtradeURL <- paste0(comtradeURL,
"ps=", ps, "&", # time period
"r=", r, "&", # reporting area
"p=", p, "&", # partner country
"rg=", rg, "&", # trade flow
"cc=", cc, "&", # commodities
"fmt=csv", # format is CSV
sep = "")
dd <- read.csv(comtradeURL, header=TRUE)
dd
g=gc()
rm(list=ls())
install.packages(c("backports", "gdpc", "tidyverse"))
install.packages('tsne')
library("tsne", lib.loc="~/R/win-library/3.3")
colors = rainbow(length(unique(iris$Species)))
colors
names(colors) = unique(iris$Species)
colors
ecb = function(x,y){ plot(x,t='n'); text(x,labels=iris$Species, col=colors[iris$Species]) }
ecb
tsne_iris = tsne(iris[,1:4], epoch_callback = ecb, perplexity=50)
dev.new()
pca_iris = princomp(iris[,1:4])$scores[,1:2]
plot(pca_iris, t='n')
text(pca_iris, labels=iris$Species,col=colors[iris$Species])
rep(1971:1999, 2)
length(1971:1999)
install.packages(c("dendextend", "forcats", "mclust", "qgraph", "TH.data", "xml2"))
length(71:99)
length(69:97)
install.packages('ggmap')
library(ggmap)
qmap(location = "baylor university")
paris <- get_map(location = "paris")
qmap(baylor, zoom = 14, maptype = 53428, api_key = api_key,
source = "cloudmade")
qmap("houston", zoom = 10, maptype = 58916, api_key = api_key,
source = "cloudmade")
latam <- readOGR("//dapadfs/workspace_cluster_3/bid-cc-agricultural-sector/03-Map_LatinAmerica/Latino_America.shp", layer="Latino_America")
library(rgdal)
library(rgdal)
latam <- readOGR("//dapadfs/workspace_cluster_3/bid-cc-agricultural-sector/03-Map_LatinAmerica/Latino_America.shp", layer="Latino_America")
plot(latam)
names(latam@data)
ggplot() +
geom_polygon(data=latam, aes(x=long, y=lat, group=group), fill="grey40",
colour="grey90", alpha=1)
ggplot() +
geom_polygon(data=latam, aes(x=long, y=lat, group=group), fill="grey40",
colour="black", alpha=1)
latam_map <- ggplot() + geom_polygon(data = latam, aes(x = long, y = lat, group = group), fill = "black", colour = "grey90", alpha = 1)
latam_map
latam_map <- ggplot() + geom_polygon(data = latam, aes(x = long, y = lat, group = group), fill = "black", colour = "grey90", alpha = 1)
latam_map <- latam_map + theme_dark()
latam_map
cultivar <- 1
cul_list <- data.frame(CID=1:6,dsid=c("IB0010","IB0013","IB0016","IB0028","IB0022","IB0026"),
culname=c("Seri82BA","TajanBA","DonErnestoBA","Gerek79BA","HalconsnaBA","BrigadierBA"))
run_type <- "final"
sys_type <- "riego"
path_functions <- "C:/Users/haachicanoy/Documents/GitHub/dapa-climate-change/bid-cc-agricultural-sector/DSSAT-R/"
path_project <- "//dapadfs/workspace_cluster_3/bid-cc-agricultural-sector/"
load(paste0(path_project, "14-ObjectsR/Soil2.RData"))
rm(list=setdiff(ls(), c("values", "Soil_profile", "Cod_Ref_and_Position_Generic", "make_soilfile","xy_Ref",
"Soil_Generic", "wise", "in_data", "read_oneSoilFile", "path_functions", "path_project",
"Cod_Ref_and_Position", "profileMatrix","scenario","cul_list","cultivar","run_type","sys_type",
"modelos","gcm_i","cleanup_all")))
load(paste0(path_project, "/08-Cells_toRun/matrices_cultivo/Wheat_",sys_type,".RDat"))
assign("crop_mgmt", get(paste("crop_",sys_type,sep="")))
rm(list=setdiff(ls(), "crop_mgmt"))
library(rgdal)
latam <- readOGR("//dapadfs/workspace_cluster_3/bid-cc-agricultural-sector/03-Map_LatinAmerica/Latino_America.shp", layer="Latino_America")
head(crop_mgmt)
latam_map <- ggplot() + geom_polygon(data = latam, aes(x = long, y = lat, group = group), fill = "black", colour = "grey90", alpha = 1)
latam_map <- latam_map + theme_dark()
latam_map <- latam_map + geom_point(data = crop_mgmt, aes(x = x, y = y, color = mirca.start), alpha=1, size=3)
latam_map
latam_map <- ggplot() + geom_polygon(data = latam, aes(x = long, y = lat, group = group), fill = "black", colour = "grey90", alpha = 1)
latam_map <- latam_map + theme_dark()
latam_map <- latam_map + geom_point(data = crop_mgmt, aes(x = x, y = y, color = as.factor(mirca.start)), alpha=1, size=3)
latam_map
latam_map <- ggplot() + geom_polygon(data = latam, aes(x = long, y = lat, group = group), fill = "black", colour = "grey90", alpha = 1)
latam_map <- latam_map + theme_dark()
latam_map <- latam_map + geom_point(data = crop_mgmt, aes(x = x, y = y, color = as.factor(mirca.end)), alpha=1, size=3)
latam_map
latam_map <- ggplot() + geom_polygon(data = latam, aes(x = long, y = lat, group = group), fill = "black", colour = "grey90", alpha = 1)
latam_map <- latam_map + theme_dark()
latam_map <- latam_map + geom_point(data = crop_mgmt, aes(x = x, y = y, color = as.factor(mirca.end)), alpha = 1, size = 3)
latam_map <- latam_map + xlab('Longitude') + ylab('Latitude') + guides(color = guide_legend(title = 'Mirca start'))
latam_map
ggsave(filename = 'mirca_start.png', plot = latam_map, width = 8, height = 10, units = "in")
ggsave(filename = 'mirca_start.png', plot = latam_map, width = 9, height = 10, units = "in")
ggsave(filename = 'mirca_start.png', plot = latam_map, width = 10, height = 10, units = "in")
latam_map <- ggplot() + geom_polygon(data = latam, aes(x = long, y = lat, group = group), fill = "black", colour = "grey90", alpha = 1)
latam_map <- latam_map + theme_dark()
latam_map <- latam_map + geom_point(data = crop_mgmt, aes(x = x, y = y, color = as.factor(mirca.end)), alpha = 1, size = 3)
latam_map <- latam_map + xlab('Longitude') + ylab('Latitude') + guides(color = guide_legend(title = 'Mirca end'))
latam_map
ggsave(filename = 'mirca_end.png', plot = latam_map, width = 10, height = 10, units = "in")
latam_map + coord_equal(ratio=1)
latam_map <- ggplot() + geom_polygon(data = latam, aes(x = long, y = lat, group = group), fill = "black", colour = "grey90", alpha = 1)
latam_map <- latam_map + theme_dark()
latam_map <- latam_map + geom_point(data = crop_mgmt, aes(x = x, y = y, color = as.factor(mirca.start)), alpha = 1, size = 3)
latam_map <- latam_map + xlab('Longitude') + ylab('Latitude') + guides(color = guide_legend(title = 'Mirca start'))
latam_map <- latam_map + coord_equal(ratio=1)
ggsave(filename = 'mirca_start.png', plot = latam_map, width = 10, height = 10, units = "in")
latam_map <- ggplot() + geom_polygon(data = latam, aes(x = long, y = lat, group = group), fill = "black", colour = "grey90", alpha = 1)
latam_map <- latam_map + theme_dark()
latam_map <- latam_map + geom_point(data = crop_mgmt, aes(x = x, y = y, color = as.factor(mirca.end)), alpha = 1, size = 3)
latam_map <- latam_map + xlab('Longitude') + ylab('Latitude') + guides(color = guide_legend(title = 'Mirca end'))
latam_map <- latam_map + coord_equal(ratio=1)
ggsave(filename = 'mirca_end.png', plot = latam_map, width = 10, height = 10, units = "in")
options(warn = -1); options(scipen = 999)
library(ggplot2)
library(dplyr)
library(tidyr)
Run <- read.csv('wheat_results.csv')
options(warn = -1); options(scipen = 999)
library(ggplot2)
library(dplyr)
library(tidyr)
Run <- read.csv('wheat_results.csv')
Run %>% ggplot(aes(x = Year, y = HWAH, group = as.factor(Year), colour = as.factor(Pixel))) + geom_point() +
facet_grid(Run_type ~ Cultivar) + theme_bw()
cultivar <- 1
cul_list <- data.frame(CID=1:6,dsid=c("IB0010","IB0013","IB0016","IB0028","IB0022","IB0026"),
culname=c("Seri82BA","TajanBA","DonErnestoBA","Gerek79BA","HalconsnaBA","BrigadierBA"))
run_type <- "final"
sys_type <- "riego"
path_functions <- "C:/Users/haachicanoy/Documents/GitHub/dapa-climate-change/bid-cc-agricultural-sector/DSSAT-R/"
path_project <- "//dapadfs/workspace_cluster_3/bid-cc-agricultural-sector/"
load(paste0(path_project, "14-ObjectsR/Soil2.RData"))
rm(list=setdiff(ls(), c("values", "Soil_profile", "Cod_Ref_and_Position_Generic", "make_soilfile","xy_Ref",
"Soil_Generic", "wise", "in_data", "read_oneSoilFile", "path_functions", "path_project",
"Cod_Ref_and_Position", "profileMatrix","scenario","cul_list","cultivar","run_type","sys_type",
"modelos","gcm_i","cleanup_all")))
load(paste0(path_project, "/08-Cells_toRun/matrices_cultivo/Wheat_",sys_type,".RDat"))
assign("crop_mgmt", get(paste("crop_",sys_type,sep="")))
rm(list=setdiff(ls(), "crop_mgmt"))
Run <- read.csv('wheat_results.csv')
head(crop_mgmt)
head(Run)
crop_mgmt$Pixel <- 1:nrow(crop_mgmt)
dim(Run[Run$Cultivar == "Seri82BA",])
dim(Run[Run$Cultivar == "Seri82BA" & Run$Run_type == "diagnostic",])
seri82ba <- Run[Run$Cultivar == "Seri82BA" & Run$Run_type == "diagnostic",]; rownames(seri82ba) <- 1:nrow(seri82ba)
names(seri82ba)
names(crop_mgmt)
seri82ba <- merge(x = seri82ba, y = crop_mgmt, by = "Pixel")
View(seri82ba)
plot(x = seri82ba$mirca.start, y = seri82ba$HWAH, ty = "p", pch = 20, col = 1)
plot(x = seri82ba$mirca.end, y = seri82ba$HWAH, ty = "p", pch = 20, col = 1)
plot(x = seri82ba$mirca.start, y = seri82ba$TMAXA, ty = "p", pch = 20, col = 1)
gg <- Run %>% ggplot(aes(x = as.factor(Pixel), y = HWAH, group = as.factor(Year), colour = Run_type)) + geom_quantile() +
facet_wrap(~ Cultivar) + theme_bw() + xlab('Pixel') + ylab('Yield')
gg
gg <- Run %>% ggplot(aes(x = as.factor(Pixel), y = HWAH, group = as.factor(Year), colour = Run_type)) + geom_pointrange() +
facet_wrap(~ Cultivar) + theme_bw() + xlab('Pixel') + ylab('Yield')
gg
gg <- Run %>% ggplot(aes(x = as.factor(Pixel), y = HWAH, group = as.factor(Year), colour = Run_type)) + geom_errorbar() +
facet_wrap(~ Cultivar) + theme_bw() + xlab('Pixel') + ylab('Yield')
gg
View(Run)
View(Run)
gg <- Run %>% ggplot(aes(x = as.numeric(Pixel), y = as.numeric(HWAH), group = as.factor(Year), colour = Run_type)) + geom_line() +
facet_wrap(~ Cultivar) + theme_bw() + xlab('Pixel') + ylab('Yield (kg/ha)')
gg
hist(Run$Year)
hist(seri82ba$Year)
hist(seri82ba$HWAH)
hist(seri82ba$HWAH[seri82ba$Pixel==1 & seri82ba$Run_type=='diagnostic'])
hist(seri82ba$HWAH[seri82ba$Pixel==1 & seri82ba$Run_type=='final'])
hist(Run$HWAH[Run$Pixel==1 & Run$Run_type=='final' & Run$Cultivar=='Seri82BA'])
plot(x = seri82ba$TMAXA, y = seri82ba$HWAH, ty = "p", pch = 20, col = 1)
plot(x = seri82ba$TMAXA, y = seri82ba$HWAH, ty = "p", pch = 20, col = 1, xlab = 'Maximum temperature', ylab = 'Yield (kg/ha)')
plot(x = seri82ba$TMAXA, y = seri82ba$HWAH, ty = "p", xlab = 'Maximum temperature', ylab = 'Yield (kg/ha)')
plot(x = seri82ba$TMAXA, y = seri82ba$HWAH, ty = "p", pch = 20, col = 1, xlab = 'Maximum temperature', ylab = 'Yield (kg/ha)')
plot(x = seri82ba$TMINA, y = seri82ba$HWAH, ty = "p", pch = 20, col = 1, xlab = 'Minimum temperature', ylab = 'Yield (kg/ha)')
par(mfrow = c(1, 2))
plot(x = seri82ba$TMAXA, y = seri82ba$HWAH, ty = "p", pch = 20, col = 1, xlab = 'Maximum temperature', ylab = 'Yield (kg/ha)')
plot(x = seri82ba$TMINA, y = seri82ba$HWAH, ty = "p", pch = 20, col = 1, xlab = 'Minimum temperature', ylab = 'Yield (kg/ha)')
plot(x = seri82ba$mirca.start, y = seri82ba$TMAXA, ty = "p", pch = 20, col = 1, xlab = 'Start date', ylab = 'Maximum temperature')
plot(x = seri82ba$mirca.start, y = seri82ba$TMAXA, ty = "p", pch = 20, col = 1, xlab = 'Start date', ylab = 'Maximum temperature')
png(filename = 'temperature_vs_yield.png', width = 10, height = 6, units = 'in')
par(mfrow = c(1, 2))
plot(x = seri82ba$TMAXA, y = seri82ba$HWAH, ty = "p", pch = 20, col = 1, xlab = 'Maximum temperature', ylab = 'Yield (kg/ha)')
plot(x = seri82ba$TMINA, y = seri82ba$HWAH, ty = "p", pch = 20, col = 1, xlab = 'Minimum temperature', ylab = 'Yield (kg/ha)')
dev.off()
png(filename = 'temperature_vs_yield.png', width = 1500, height = 900, units = 'px')
par(mfrow = c(1, 2))
plot(x = seri82ba$TMAXA, y = seri82ba$HWAH, ty = "p", pch = 20, col = 1, xlab = 'Maximum temperature', ylab = 'Yield (kg/ha)')
plot(x = seri82ba$TMINA, y = seri82ba$HWAH, ty = "p", pch = 20, col = 1, xlab = 'Minimum temperature', ylab = 'Yield (kg/ha)')
dev.off()
png(filename = 'temperature_vs_yield.png', width = 1000, height = 600, units = 'px')
par(mfrow = c(1, 2))
plot(x = seri82ba$TMAXA, y = seri82ba$HWAH, ty = "p", pch = 20, col = 1, xlab = 'Maximum temperature', ylab = 'Yield (kg/ha)')
plot(x = seri82ba$TMINA, y = seri82ba$HWAH, ty = "p", pch = 20, col = 1, xlab = 'Minimum temperature', ylab = 'Yield (kg/ha)')
dev.off()
plot(x = seri82ba$y, y = seri82ba$TMAXA, ty = "p", pch = 20, col = 1, xlab = 'Latitude', ylab = 'Maximum temperature')
names(seri82ba)
ggplot(data = seri82ba, aes(x = y, y = TMAXA, group = mirca.start)) + geom_point()
ggplot(data = seri82ba, aes(x = y, y = TMAXA, colour = mirca.start)) + geom_point()
ggplot(data = seri82ba, aes(x = y, y = TMAXA, colour = as.factor(mirca.start))) + geom_point()
gg <- ggplot(data = seri82ba, aes(x = y, y = TMAXA, colour = as.factor(mirca.start))) + geom_point()
gg <- gg + theme_dark() + xlab('Latitude') + ylab('Maximum temperature')
gg
gg <- ggplot(data = seri82ba, aes(x = y, y = TMAXA, size = mirca.start)) + geom_point()
gg <- gg + theme_dark() + xlab('Latitude') + ylab('Maximum temperature')
gg
gg <- ggplot(data = seri82ba, aes(x = y, y = TMAXA, size = mirca.start, colour = mirca.start)) + geom_point()
gg <- gg + theme_dark() + xlab('Latitude') + ylab('Maximum temperature')
gg
gg <- ggplot(data = seri82ba, aes(x = y, y = TMAXA, size = mirca.start, colour = mirca.start)) + geom_point()
gg <- gg + theme_bw() + xlab('Latitude') + ylab('Maximum temperature')
gg
gg <- ggplot(data = seri82ba, aes(x = y, y = TMAXA, size = mirca.start, colour = mirca.start)) + geom_point()
gg <- gg + theme_bw() + xlab('Latitude') + ylab('Maximum temperature') + scale_colour_brewer(palette = "Set1")
gg
gg <- ggplot(data = seri82ba, aes(x = y, y = TMAXA, size = mirca.start, colour = as.factor(mirca.start))) + geom_point()
gg <- gg + theme_bw() + xlab('Latitude') + ylab('Maximum temperature') + scale_colour_brewer(palette = "Set1")
gg
gg <- ggplot(data = seri82ba, aes(x = y, y = TMAXA, size = as.factor(mirca.start), colour = as.factor(mirca.start))) + geom_point()
gg <- gg + theme_bw() + xlab('Latitude') + ylab('Maximum temperature') + scale_colour_brewer(palette = "Set1")
gg
gg <- ggplot(data = seri82ba, aes(x = y, y = TMAXA, size = as.factor(mirca.start), colour = as.factor(mirca.start))) + geom_point()
gg <- gg + theme_bw() + xlab('Latitude') + ylab('Maximum temperature') + scale_colour_brewer(palette = "Set1")
gg <- gg + guides(size = guide_legend(title = 'Mirca start date'))
ggsave(filename = 'latitude_vs_tmax_by_mircastart.png', plot = gg, width = 10, height = 10, units = "in")
gg <- ggplot(data = seri82ba, aes(x = y, y = TMAXA, size = as.factor(mirca.start), colour = as.factor(mirca.start))) + geom_point()
gg <- gg + theme_bw() + xlab('Latitude') + ylab('Maximum temperature') + scale_colour_brewer(palette = "Set1")
gg <- gg + guides(size = guide_legend(title = 'Mirca start date'))
gg <- gg + guides(colour = guide_legend(title = 'Mirca start date'))
ggsave(filename = 'latitude_vs_tmax_by_mircastart.png', plot = gg, width = 10, height = 10, units = "in")
gg <- ggplot(data = seri82ba, aes(x = y, y = TMAXA, size = as.factor(mirca.start), colour = as.factor(mirca.start))) + geom_point(alpha = 0.7)
gg <- gg + theme_bw() + xlab('Latitude') + ylab('Maximum temperature') + scale_colour_brewer(palette = "Set1")
gg <- gg + guides(size = guide_legend(title = 'Mirca start date'))
gg <- gg + guides(colour = guide_legend(title = 'Mirca start date'))
ggsave(filename = 'latitude_vs_tmax_by_mircastart.png', plot = gg, width = 10, height = 10, units = "in")
View(Run)
gg <- Run %>% ggplot(aes(x = as.numeric(Pixel), y = as.numeric(HWAH), group = as.factor(Year), colour = Run_type)) + geom_line() +
facet_wrap(~ Cultivar) + theme_bw() + xlab('Pixel') + ylab('Yield (kg/ha)')
gg
gg <- Run %>% ggplot(aes(x = as.factor(Pixel), y = as.numeric(HWAH), group = as.factor(Year), colour = Run_type)) + geom_boxplot() +
facet_wrap(~ Cultivar) + theme_bw() + xlab('Pixel') + ylab('Yield (kg/ha)')
gg
gg <- Run %>% ggplot(aes(x = as.numeric(Pixel), y = as.numeric(HWAH), group = as.factor(Year), colour = Run_type)) + geom_point() +
facet_wrap(~ Cultivar) + theme_bw() + xlab('Pixel') + ylab('Yield (kg/ha)')
gg
quantileFun <- function(x){z <- stats::quantile(x, probs=0.05); return(z)}
names(Run)
Run$HWAH[Run$Pixel == 1 & Run$Cultivar == "Seri82BA" & Run_type == "diagnostic"]
Run$HWAH[Run$Pixel == 1 & Run$Cultivar == "Seri82BA" & Run_type == "diagnostic"]
Run$HWAH[Run$Pixel == 1 & Run$Cultivar == "Seri82BA" & Run$Run_type == "diagnostic"]
Run$Year[Run$Pixel == 1 & Run$Cultivar == "Seri82BA" & Run$Run_type == "diagnostic"]
plot(x = Run$Year[Run$Pixel == 1 & Run$Cultivar == "Seri82BA" & Run$Run_type == "diagnostic"],
y = Run$HWAH[Run$Pixel == 1 & Run$Cultivar == "Seri82BA" & Run$Run_type == "diagnostic"], ty = 'l')
hist(Run$HWAH[Run$Pixel == 1 & Run$Cultivar == "Seri82BA" & Run$Run_type == "diagnostic"])
median(Run$HWAH[Run$Pixel == 1 & Run$Cultivar == "Seri82BA" & Run$Run_type == "diagnostic"])
Run$Year[Run$Pixel == 1 & Run$Cultivar == "Seri82BA" & Run$Run_type == "diagnostic"]
Run$HWAH[Run$Pixel == 1 & Run$Cultivar == "Seri82BA" & Run$Run_type == "diagnostic"]
median(Run$HWAH[Run$Pixel == 1 & Run$Cultivar == "Seri82BA" & Run$Run_type == "diagnostic"])
hist(Run$Year[Run$Pixel == 1 & Run$Cultivar == "Seri82BA" & Run$Run_type == "diagnostic"])
median(Run$Year[Run$Pixel == 1 & Run$Cultivar == "Seri82BA" & Run$Run_type == "diagnostic"])
names(Run)
aux <- as.data.frame(dplyr::summarise(group_by(Run, Pixel, Cultivar, Run_type), quantileFun(HWAH)))
View(aux)
head(aux)
names(aux)[4] <- "p05"
quantileFun <- function(x){z <- stats::quantile(x, probs=0.50); return(z)}
aux1 <- as.data.frame(dplyr::summarise(group_by(Run, Pixel, Cultivar, Run_type), quantileFun(HWAH)))
names(aux1)[4] <- "p50"
quantileFun <- function(x){z <- stats::quantile(x, probs=0.90); return(z)}
aux2 <- as.data.frame(dplyr::summarise(group_by(Run, Pixel, Cultivar, Run_type), quantileFun(HWAH)))
names(aux2)[4] <- "p90"
names(aux)
aux <- merge(aux, aux1, by = c("Pixel", "Cultivar", "Run_type"))
rm(aux1)
aux <- merge(aux, aux2, by = c("Pixel", "Cultivar", "Run_type")); rm(aux2)
View(aux)
head(aux)
gg <- aux %>% ggplot(aes(x = Pixel, y = p50, ymin = p05, ymax = p90, colour = Run_type))
gg <- gg + geom_linerange(position = position_dodge(width = c(0.6, 0.4)), size = 1, alpha = 0.5)
gg <- gg + facet_wrap(~ Cultivar) + theme_bw() + xlab('Pixel') + ylab('Yield (kg/ha)')
gg
gg <- aux %>% ggplot(aes(x = Pixel, y = p50, ymin = p05, ymax = p90, colour = Run_type))
gg <- gg + geom_linerange(position = position_dodge(width = c(0.6, 0.4)), size = 1, alpha = 0.5)
gg <- gg + geom_point(aes(color = Run_type, shape = Run_type), position = position_dodge(width = c(0.6, 0.4)), size = 3)
gg <- gg + facet_wrap(~ Cultivar) + theme_bw() + xlab('Pixel') + ylab('Yield (kg/ha)')
gg
View(crop_mgmt)
View(crop_mgmt)
ggsave(filename = 'Wheat_diagnostic_vs_final_90interval.pdf', plot = gg, width = 12, height = 8, units = 'in')
system(paste("convert -verbose -density 300 Wheat_diagnostic_vs_final_90interval.pdf -quality 100 -sharpen 0x1.0 -alpha off Wheat_diagnostic_vs_final_90interval.png", sep=""), wait=TRUE)
gg <- aux %>% ggplot(aes(x = Pixel, y = p50, ymin = p05, ymax = p90, colour = Run_type))
gg <- gg + geom_linerange(position = position_dodge(width = c(0.6, 0.4)), size = 1, alpha = 0.5)
gg <- gg + geom_point(aes(color = Run_type, shape = Run_type), position = position_dodge(width = c(0.6, 0.4)), size = 3)
gg <- gg + facet_wrap(~ Cultivar) + theme_bw() + xlab('Pixel') + ylab('Yield (kg/ha)')
gg
ggsave(filename = 'Wheat_diagnostic_vs_final_90interval.pdf', plot = gg, width = 14, height = 8, units = 'in')
library(ncdf4)
wd_dir <- 'D:/ToBackup/Modelling/bid-cc-agricultural-sector/GGCMI_data/GGCMI'
library(raster)
ggcmi <- raster(paste(wd_dir, "/Wheat_ir_growing_season_dates_v1.25.nc4", sep = ""))
plot(ggcmi)
?extract
raster::extract(x = ggcmi, y = crop_mgmt[, c('x', 'y')])
ggcmi <- raster::stack(paste(wd_dir, "/Wheat_ir_growing_season_dates_v1.25.nc4", sep = ""))
ggcmi
ggcmi <- raster::brick(paste(wd_dir, "/Wheat_ir_growing_season_dates_v1.25.nc4", sep = ""))
ggcmi
ggcmi <- raster::raster(paste(wd_dir, "/Wheat_ir_growing_season_dates_v1.25.nc4", sep = ""))
raster::extract(x = ggcmi, y = crop_mgmt[, c('x', 'y')])
head(crop_mgmt)
ggcmi_dates <- raster::extract(x = ggcmi, y = crop_mgmt[, c('x', 'y')])
plot(x = crop_mgmt$mirca.start, y = ggcmi_dates, ty = "p", pch = 20)
plot(x = crop_mgmt$mirca.start, y = ggcmi_dates, ty = "p", pch = 20, xlab = "Mirca start date", ylab = "GGCMI start date")
plot(ggcmi)
hist(ggcmi[])
ggcmi[which(ggcmi[] == -99)]
ggcmi[which(ggcmi[] == -99)] <- NA
ggcmi_dates <- raster::extract(x = ggcmi, y = crop_mgmt[, c('x', 'y')])
ggcmi_dates
plot(x = crop_mgmt$mirca.start, y = ggcmi_dates, ty = "p", pch = 20, xlab = "Mirca start date", ylab = "GGCMI start date")
abline(0, 1)
View(data.frame(mirca = crop_mgmt$mirca.start, ggcmi = ggcmi_dates))
sum(is.na(ggcmi_dates))
crop_mgmt2 <- crop_mgmt
crop_mgmt$mirca.start <- ggcmi_dates
library(class)
is.na(crop_mgmt$mirca.start)
!is.na(crop_mgmt$mirca.start)
train_labels <- crop_mgmt$mirca.start[!is.na(crop_mgmt$mirca.start)]
train_labels
test_labels <- crop_mgmt$mirca.start[is.na(crop_mgmt$mirca.start)]
test_labels
train <- crop_mgmt[!is.na(crop_mgmt$mirca.start), c("x", "y")]
train
test <- crop_mgmt[is.na(crop_mgmt$mirca.start), c("x", "y")]
test
knn(train = train, test = test, cl = train_labels, k = 5)
knn(train = train, test = test, cl = train_labels, k = 10)
knn(train = train, test = test, cl = train_labels, k = 1)
knn(train = train, test = test, cl = train_labels, k = 2)
knn(train = train, test = test, cl = train_labels, k = 20)
knn(train = train, test = test, cl = train_labels, k = 50)
plot(x = crop_mgmt$x, y = crop_mgmt$y, col = crop_mgmt$mirca.start)
ggplot(data = crop_mgmt, aes(x = x, y = y, colour = mirca.start)) + geom_point()
ggplot(data = crop_mgmt, aes(x = x, y = y, colour = as.factor(mirca.start))) + geom_point()
ggplot(data = crop_mgmt, aes(x = x, y = y, colour = as.factor(mirca.start), size = as.factor(mirca.start))) + geom_point()
ggplot(data = crop_mgmt, aes(x = x, y = y, colour = as.factor(mirca.start), size = as.factor(mirca.start))) + geom_point()
ggplot(data = crop_mgmt, aes(x = x, y = y, colour = as.factor(mirca.start))) + geom_point()
gg <- ggplot(data = crop_mgmt, aes(x = x, y = y, colour = as.factor(mirca.start))) + geom_point()
gg <- gg + theme_bw() + xlab("Longitude") + ylab("Latitude") + guides(colour = guide_legend(title = 'Mirca start'))
gg
library(rgdal)
latam <- readOGR("//dapadfs/workspace_cluster_3/bid-cc-agricultural-sector/03-Map_LatinAmerica/Latino_America.shp", layer="Latino_America")
gg <- ggplot() + geom_polygon(data = latam, aes(x = long, y = lat, group = group), fill = "black", colour = "grey90", alpha = 1)
latam_map <- ggplot() + geom_polygon(data = latam, aes(x = long, y = lat, group = group), fill = "black", colour = "grey90", alpha = 1)
latam_map <- latam_map + theme_dark()
latam_map <- latam_map + geom_point(data = crop_mgmt, aes(x = x, y = y, color = as.factor(mirca.start)), alpha = 1, size = 3)
latam_map <- latam_map + xlab('Longitude') + ylab('Latitude') + guides(color = guide_legend(title = 'Mirca start'))
latam_map <- latam_map + coord_equal(ratio=1)
latam_map
latam_map <- ggplot() + geom_polygon(data = latam, aes(x = long, y = lat, group = group), fill = "black", colour = "grey90", alpha = 1)
latam_map <- latam_map + theme_dark()
latam_map <- latam_map + geom_point(data = crop_mgmt, aes(x = x, y = y, color = as.factor(mirca.start)), alpha = 1, size = 3)
latam_map <- latam_map + xlab('Longitude') + ylab('Latitude') + guides(color = guide_legend(title = 'Mirca start'))
latam_map <- latam_map + coord_equal(ratio=1)
latam_map
ggsave(filename = 'ggcmi_start.png', plot = latam_map, width = 10, height = 10, units = "in")
gg <- aux %>% ggplot(aes(x = Pixel, y = p50, ymin = p05, ymax = p90, colour = Run_type))
gg <- gg + geom_linerange(position = position_dodge(width = c(0.6, 0.4)), size = 1, alpha = 0.5)
gg <- gg + geom_point(aes(color = Run_type, shape = Run_type), position = position_dodge(width = c(0.6, 0.4)), size = 3)
gg <- gg + facet_wrap(~ Cultivar) + theme_bw() + xlab('Pixel') + ylab('Yield (kg/ha)')
gg
ggsave(filename = 'Wheat_diagnostic_vs_final_90interval.pdf', plot = gg, width = 15, height = 10, units = 'in')
View(crop_mgmt)
View(crop_mgmt2)
saveRDS(object = crop_mgmt, file = 'D:/ToBackup/Modelling/bid-cc-agricultural-sector/crop_mgmt.rds')
options(warn = -1)
options(scipen = 999)
# load packages
suppressMessages(library(dplyr))
suppressMessages(library(tidyr))
suppressMessages(library(ggplot2))
suppressMessages(library(caroline))
suppressMessages(library(purrr))
suppressMessages(library(broom))
suppressMessages(library(ggplot2))
suppressMessages(library(epanetReader))
suppressMessages(library(ff))
suppressMessages(library(ffbase))
all_data <- read.csv('all_1961_2009_final_analysis_data_final_2016_10_28.csv')
setwd("~/GitHub/cwr_changing_global_diet/r_script/data")
all_data <- read.csv('all_1961_2009_final_analysis_data_final_2016_10_28.csv')
gFood <- read.csv('FBS_commodities_foodgroups_regions_finaltest.csv')
gFood <- gFood %>% dplyr::select(Item:food_group) %>% unique
all_data2 <- dplyr::left_join(all_data, gFood, by=c('Item'))
rm(all_data, gFood)
View(all_data2)
all_data2 <- all_data2 %>% tidyr::gather(Year, Value, Y1961:Y2009)
all_data2$Year <- as.numeric(gsub(pattern='Y', replacement='', x=all_data2$Year))
View(all_data2)
all_data3 <- all_data2
all_data3$food_group <- tolower(gsub(pattern = ' ', replacement = '_', x = all_data3$food_group))
all_data3$Item <- gsub(pattern = '* \\((.*?)\\)', replacement = '', x = all_data3$Item)
all_data3$Item <- tolower(gsub(pattern = ' ', replacement = '-', x = all_data3$Item))
all_data3$Item <- tolower(gsub(pattern = ',', replacement = '', x = all_data3$Item))
all_data3$Item <- gsub(pattern = '\\-$', replacement = '', x = all_data3$Item)
all_data3$Item <- gsub(pattern = '\\&', replacement = 'and', x = all_data3$Item)
all_data3$Country <- as.character(all_data3$Country)
all_data3$Country[grep(pattern = "Côte d'Ivoire", x = all_data3$Country, fixed = TRUE)] <- 'Ivory Coast'
all_data3$Country <- tolower(all_data3$Country)
all_data3$Country <- gsub(pattern = '* \\((.*?)\\)', replacement = '', x = all_data3$Country)
all_data3$Country <- gsub(pattern = ' ', replacement = '_', x = all_data3$Country)
countries <- all_data3$Country %>% unique %>% as.character %>% sort
countries
length(countries)
View(all_data3)
all_data3 <- all_data2
# change group name
all_data3$food_group <- tolower(gsub(pattern = ' ', replacement = '-', x = all_data3$food_group))
all_data3$Item <- gsub(pattern = '* \\((.*?)\\)', replacement = '', x = all_data3$Item)
all_data3$Item <- tolower(gsub(pattern = ' ', replacement = '_', x = all_data3$Item))
all_data3$Item <- tolower(gsub(pattern = ',', replacement = '', x = all_data3$Item))
all_data3$Item <- gsub(pattern = '\\-$', replacement = '', x = all_data3$Item)
all_data3$Item <- gsub(pattern = '\\&', replacement = 'and', x = all_data3$Item)
all_data3$Country <- as.character(all_data3$Country)
all_data3$Country[grep(pattern = "Côte d'Ivoire", x = all_data3$Country, fixed = TRUE)] <- 'Ivory Coast'
all_data3$Country <- tolower(all_data3$Country)
all_data3$Country <- gsub(pattern = '* \\((.*?)\\)', replacement = '', x = all_data3$Country)
all_data3$Country <- gsub(pattern = ' ', replacement = '_', x = all_data3$Country)
View(all_data3)
countries <- all_data3$Country %>% unique %>% as.character %>% sort
j=1
countryData <- all_data3 %>% dplyr::filter(Country == countries[j])
View(countryData)
all_data3$Element %>% unique %>% as.character %>% sort
elements  <- all_data3$Element %>% unique %>% as.character %>% sort
i=j=1
elementData <- all_data3 %>% dplyr::filter(Element == elements[i])
countryData <- elementData %>% dplyr::filter(Country == countries[j])
View(countryData)
all_data3 <- all_data2
# change group name
all_data3$food_group <- tolower(gsub(pattern = ' ', replacement = '-', x = all_data3$food_group))
all_data3$Item <- gsub(pattern = '* \\((.*?)\\)', replacement = '', x = all_data3$Item)
all_data3$Item <- tolower(gsub(pattern = ' ', replacement = '_', x = all_data3$Item))
all_data3$Item <- tolower(gsub(pattern = ',', replacement = '', x = all_data3$Item))
all_data3$Item <- gsub(pattern = '\\_$', replacement = '', x = all_data3$Item)
all_data3$Item <- gsub(pattern = '\\&', replacement = 'and', x = all_data3$Item)
all_data3$Country <- as.character(all_data3$Country)
all_data3$Country[grep(pattern = "Côte d'Ivoire", x = all_data3$Country, fixed = TRUE)] <- 'Ivory Coast'
all_data3$Country <- tolower(all_data3$Country)
all_data3$Country <- gsub(pattern = '* \\((.*?)\\)', replacement = '', x = all_data3$Country)
all_data3$Country <- gsub(pattern = ' ', replacement = '_', x = all_data3$Country)
elementData <- all_data3 %>% dplyr::filter(Element == elements[i])
countryData <- elementData %>% dplyr::filter(Country == countries[j])
View(countryData)
getwd()
elements[i]
elements
nicerNms <- c('fat', 'calories', 'food_quantity', 'protein')
paste(getwd(), "/data_sources/country_food_group_crop/", nicerNms[i], sep = "")
element_dir <- paste(getwd(), "/data_sources/country_food_group_crop/", nicerNms[i], sep = "")
if(!dir.exists(element_dir)){dir.create(path = element_dir, showWarnings = FALSE, recursive = TRUE)}
!dir.exists(element_dir)
element_dir <- paste(getwd(), "/_data_sources/country_food_group_crop/", nicerNms[i], sep = "")
if(!dir.exists(element_dir)){dir.create(path = element_dir, showWarnings = FALSE, recursive = TRUE)}
head(countryData)
countryData$Value <- round(countryData$Value, 1)
countryData$combination <- paste(countryData$food_group, "_", countryData$Item, sep = "")
countryData <- countryData[c('Year', 'Value', 'combination')]
head(countryData)
countryData <- countryData %>% spread(key = combination, value = Value)
head(countryData)
colnames(countryData)[1] <- 'year'
countryData <- as.data.frame(countryData)
paste(colnames(countryData)[ncol(countryData)], ',', sep = '')
colnames(countryData)[ncol(countryData)] <- paste(colnames(countryData)[ncol(countryData)], ',', sep = '')
countryData[,ncol(countryData)] <- paste(countryData[,ncol(countryData)], ',', sep='')
View(countryData)
element_dir
nicerNms
countries[j]
lapply(1:length(elements), function(i){
elementData <- all_data3 %>% dplyr::filter(Element == elements[i])
element_dir <- paste(getwd(), "/_data_sources/country_food_group_crop/", nicerNms[i], sep = "")
if(!dir.exists(element_dir)){dir.create(path = element_dir, showWarnings = FALSE, recursive = TRUE)}
lapply(1:length(countries), function(j){
countryData <- elementData %>% dplyr::filter(Country == countries[j])
countryData$Value <- round(countryData$Value, 1)
countryData$combination <- paste(countryData$food_group, "_", countryData$Item, sep = "")
countryData <- countryData[c('Year', 'Value', 'combination')]
countryData <- countryData %>% spread(key = combination, value = Value)
colnames(countryData)[1] <- 'year'
countryData <- as.data.frame(countryData)
colnames(countryData)[ncol(countryData)] <- paste(colnames(countryData)[ncol(countryData)], ',', sep = '')
countryData[,ncol(countryData)] <- paste(countryData[,ncol(countryData)], ',', sep='')
# write.delim(subData, paste(nicerNms[i], '.tsv', sep = ''))
write.csv(countryData, file = paste(element_dir, "/", countries[j], '.csv', sep = ''), row.names = FALSE, sep = "|")
})
})
head(data.frame(Country = countries)\)
head(data.frame(Country = countries))
write.csv(data.frame(Country = countries), file = paste(getwd(), "/_data_sources/country_food_group_crop/countryList.csv", sep = ""), row.names = FALSE)
g=gc()
rm(list = ls())
