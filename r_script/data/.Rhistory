summarize(Val=sum(Samples)) -> GB2Sink
names(GB2Sink) <- c('source', 'target', 'value')
## Combine datasets
Boff <- bind_rows(as.data.frame(Source2GB), as.data.frame(GB2Sink))
return(Boff)
}); rm(country2)
cFlows <- do.call(rbind, cFlows)
cFlows$source[!(cFlows$source %in% GeneBanks)] <- paste(cFlows$source[!(cFlows$source %in% GeneBanks)], ' >', sep = '')
cFlows$target[!(cFlows$target %in% GeneBanks)] <- paste('> ', cFlows$target[!(cFlows$target %in% GeneBanks)], sep = '')
## Until here everything is correct
## Including big flows to cFlows matrix, omiting flows from region of interest
df_aux <- flows[flows$source!=z,]
df_aux <- df_aux[!(df_aux$source %in% GeneBanks),]
cFlows <- rbind(df_aux, cFlows); rm(df_aux)
cNodes <- c(cFlows$source, cFlows$target) %>% unique %>% sort
lcNodes <- length(cNodes)
cNodes <- data.frame(node=0:(lcNodes-1), name=cNodes); rm(lcNodes)
cNodes$id <- ifelse(test = cNodes$name %in% GeneBanks, yes = 1, no = NA)
cNodes$id[which(cNodes$id==1)] <- gsub(pattern = ' ', replacement = '', x = cNodes$name[which(cNodes$id==1)])
cNodes$id[is.na(cNodes$id)] <- gsub(pattern = ' ', replacement = '', x = cNodes$name[is.na(cNodes$id)])
cNodes$id[grep(pattern = '^>[a-zA-Z]', x = cNodes$id, fixed = F)] <- paste(gsub(pattern = '>', replacement = '', x = cNodes$id[grep(pattern = '^>[a-zA-Z]', x = cNodes$id, fixed = F)]), '_in', sep = '')
cNodes$id[grep(pattern = '*>$', x = cNodes$id, fixed = F)] <- paste(gsub(pattern = '>', replacement = '', x = cNodes$id[grep(pattern = '*>$', x = cNodes$id, fixed = F)]), '_out', sep = '')
cFlows_coded <- cFlows#; rm(cFlows)
for(i in 1:nrow(cNodes)) {
cFlows_coded$source <- gsub(pattern = paste('^', as.character(cNodes$name[i]), sep = ''), replacement = cNodes$node[i], x = cFlows_coded$source, fixed = FALSE)
cFlows_coded$target <- gsub(pattern = paste('^', as.character(cNodes$name[i]), sep = ''), replacement = cNodes$node[i], x = cFlows_coded$target, fixed = FALSE)
}
cFlows_coded$source <- as.numeric(cFlows_coded$source)
cFlows_coded$target <- as.numeric(cFlows_coded$target)
# Falkland Islands (Malvinas) case
cFlows_coded[!complete.cases(cFlows_coded),'source'] <- cNodes$node[grep(pattern = 'Falkland Islands (Malvinas)', x = cNodes$name, fixed = TRUE)]
subsankey <- list(id = tolower(nodes_id),
sankey = list(nodes = data.frame(name=cNodes$name, id=tolower(cNodes$id)),
links = cFlows_coded)
)
return(subsankey)
})
regions2 <- as.character(nodes$name[grep(pattern = '_in$', x = nodes$id, fixed = F)]) %>% sort
countryRegions2 <- lapply(regions2, function(z){
nodes_id <- nodes$id[grep(pattern = z, x = nodes$name, fixed = F)]
a %>% filter(Recipient_region==gsub(pattern = '> ', replacement = '', x = z, fixed = TRUE)) %>% select(Origin_region, Recipient, Genebank_country, Average.no.samples.per.year) -> country
country %>% group_by(Origin_region, Recipient, Genebank_country) %>% summarise(sum(Average.no.samples.per.year, na.rm=TRUE)) -> country2; rm(country)
names(country2)[4] <- 'Samples'
country2$Origin_region <- as.character(country2$Origin_region)
country2$Recipient <- as.character(country2$Recipient)
country2$Genebank_country <- as.character(country2$Genebank_country)
country2$Samples <- as.numeric(country2$Samples)
# calculate flows from country per genebank
cFlows <- lapply(1:length(GeneBanks), function(i){
country2 %>% filter(Genebank_country == GeneBanks[i]) -> b
## Step 1, get SOURCE -> Genebank relationships
b %>%
group_by(Origin_region, Genebank_country) %>%
summarize(Val=sum(Samples)) -> Source2GB
names(Source2GB) <- c('source', 'target', 'value')
## Step 2, get Genebank -> Sink
b %>%
group_by(Genebank_country, Recipient) %>%
summarize(Val=sum(Samples)) -> GB2Sink
names(GB2Sink) <- c('source', 'target', 'value')
## Combine datasets
Boff <- bind_rows(as.data.frame(Source2GB), as.data.frame(GB2Sink))
return(Boff)
}); rm(country2)
cFlows <- do.call(rbind, cFlows)
cFlows$source[!(cFlows$source %in% GeneBanks)] <- paste(cFlows$source[!(cFlows$source %in% GeneBanks)], ' >', sep = '')
cFlows$target[!(cFlows$target %in% GeneBanks)] <- paste('> ', cFlows$target[!(cFlows$target %in% GeneBanks)], sep = '')
## Including big flows to cFlows matrix, omiting flows from region of interest
df_aux <- flows[flows$target!=z,]
df_aux <- df_aux[!(df_aux$target %in% GeneBanks),]
cFlows <- rbind(df_aux, cFlows); rm(df_aux)
cNodes <- c(cFlows$source, cFlows$target) %>% unique %>% sort
lcNodes <- length(cNodes)
cNodes <- data.frame(node=0:(lcNodes-1), name=cNodes); rm(lcNodes)
cNodes$id <- ifelse(test = cNodes$name %in% GeneBanks, yes = 1, no = NA)
cNodes$id[which(cNodes$id==1)] <- gsub(pattern = ' ', replacement = '', x = cNodes$name[which(cNodes$id==1)])
cNodes$id[is.na(cNodes$id)] <- gsub(pattern = ' ', replacement = '', x = cNodes$name[is.na(cNodes$id)])
cNodes$id[grep(pattern = '^>[a-zA-Z]', x = cNodes$id, fixed = F)] <- paste(gsub(pattern = '>', replacement = '', x = cNodes$id[grep(pattern = '^>[a-zA-Z]', x = cNodes$id, fixed = F)]), '_in', sep = '')
cNodes$id[grep(pattern = '*>$', x = cNodes$id, fixed = F)] <- paste(gsub(pattern = '>', replacement = '', x = cNodes$id[grep(pattern = '*>$', x = cNodes$id, fixed = F)]), '_out', sep = '')
cFlows_coded <- cFlows#; rm(cFlows)
for(i in 1:nrow(cNodes)) {
cFlows_coded$source <- gsub(pattern = paste('^', as.character(cNodes$name[i]), '$', sep = ''), replacement = cNodes$node[i], x = cFlows_coded$source, fixed = FALSE)
cFlows_coded$target <- gsub(pattern = paste('^', as.character(cNodes$name[i]), '$', sep = ''), replacement = cNodes$node[i], x = cFlows_coded$target, fixed = FALSE)
}
cFlows_coded$source <- as.numeric(cFlows_coded$source)
cFlows_coded$target <- as.numeric(cFlows_coded$target)
# Falkland Islands (Malvinas) case
# cFlows_coded[!complete.cases(cFlows_coded),'source'] <- cNodes$node[grep(pattern = 'Falkland Islands (Malvinas)', x = cNodes$name, fixed = TRUE)]
subsankey <- list(id = tolower(nodes_id),
sankey = list(nodes = data.frame(name=cNodes$name, id=tolower(cNodes$id)),
links = cFlows_coded)
)
return(subsankey)
})
all <- c(countryRegions, countryRegions2)
library(jsonlite)
cJson <- list(nodes = data.frame(name = nodes$name, id = tolower(nodes$id)),
links = flows_coded,
subSankey = all)
sink('sankey_draft_subSankey_corrected3.json') # redirect console output to a file
toJSON(cJson, pretty=FALSE)
sink()
devtools::install_github("kassambara/r2excel")
library(r2excel)
filename <- "r2excel-example1.xlsx"
wb <- createWorkbook(type="xlsx")
sheet <- createSheet(wb, sheetName = "example1")
xlsx.addHeader(wb, sheet, value="Add table",level=1,
color="black", underline=1)
xlsx.addLineBreak(sheet, 1)
author=paste("Author : Alboukadel KASSAMBARA. \n",
"@:alboukadel.kassambara@gmail.com.",
"\n Website : http://ww.sthda.com", sep="")
xlsx.addParagraph(wb, sheet,value=author, isItalic=TRUE, colSpan=5,
rowSpan=4, fontColor="darkgray", fontSize=14)
xlsx.addLineBreak(sheet, 3)
xlsx.addTable(wb, sheet, head(iris), startCol=2)
xlsx.addLineBreak(sheet, 2)
saveWorkbook(wb, filename)
library(gapminder)
g=gc()
rm(list=ls())
library(tidyr)
library(gapminder)
library(dplyr)
library(purrr)
library(tidyr)
library(ggplot2)
gapminder
gapminder <- gapminder %>% mutate(year1950 = year - 1950)
by_country <- gapminder %>%
group_by(continent, country) %>%
nest()
View(by_country)
by_country
str(by_country)
by_country$data[[1]]
country_model <- function(df){
lm(lifeExp ~ year1950, data=df)
}
models <- by_country %>%
mutate(
model = data %>% map(country_model)
)
models
models
models %>% filter(continent == "Africa")
models <- models %>%
mutate(
glance  = model %>% map(broom::glance),
rsq     = glance %>% map_dbl("r.squared"),
tidy    = model %>% map(broom::tidy),
augment = model %>% map(broom::augment)
)
models
models %>% arrange(desc(rsq))
models %>% filter(continent == "Africa")
models %>%
ggplot(aes(rsq, reorder(country, rsq))) +
geom_point(aes(colour = continent))
unnest(models, data) # back to where we started
unnest(models, glance, .drop = TRUE) %>% View()
unnest(models, tidy)
unnest(models, tidy) # intercept and slope coefficients per each country
models %>%
unnest(tidy) %>%
select(continent, country, term, estimate, rsq) %>%
spread(term, estimate) %>%
ggplot(aes(`(Intercept)`, year1950)) +
geom_point(aes(colour = continent, size = rsq)) +
geom_smooth(se = FALSE) +
xlab("Life Expectancy (1950)") +
ylab("Yearly improvement") +
scale_size_area()
unnest(models, augment)
models %>%
unnest(augment) %>%
ggplot(aes(year1950, .resid)) +
geom_line(aes(group = country), alpha = 1/3) +
geom_smooth(se = FALSE) +
geom_hline(yintercept = 0, colour = "white") +
facet_wrap(~continent)
library(ENMEval)
install.packages('ENMEval')
install.packages('ENMeval')
library(ENMeval)
setwd('C:/Users/haachicanoy/Documents/GitHub/cwr_changing_global_diet/r_script/data')
options(scipen = 999); options(warn = -1)
library(dplyr)
library(tidyr)
library(ggplot2)
library(caroline)
all_data <- read.csv('all_1961_2009_final_analysis_data_completeready.csv')
gFood <- read.csv('FBS_commodities_foodgroups_regions_finaltest.csv')
gFood <- gFood %>% select(1:2) %>% unique
all_data2 <- left_join(all_data, gFood, by=c('Item'))
rm(all_data, gFood)
all_data2 <- all_data2 %>% tidyr::gather(Year, Value, Y1961:Y2009)
all_data2$Year <- as.numeric(gsub(pattern='Y', replacement='', x=all_data2$Year))
all_world <- all_data2 %>% group_by(Item, Element, Unit, food_group, Year) %>% summarise(sum(Value, na.rm = TRUE))
colnames(all_world)[ncol(all_world)] <- 'Value'
all_world$Item <- as.character(all_world$Item)
all_world$Element <- as.character(all_world$Element)
all_world$Unit <- as.character(all_world$Unit)
all_world$food_group <- as.character(all_world$food_group)
all_world$Value <- round(all_world$Value, 1)
all_world$gFood <- NA
# all_world$gFood[grep(pattern = 'Animal products', x = all_world$food_group, fixed = TRUE)] <- 'meat'
# all_world$gFood[grep(pattern = 'Fruits', x = all_world$food_group, fixed = TRUE)] <- 'fruits'
# all_world$gFood[grep(pattern = 'Cereals', x = all_world$food_group, fixed = TRUE)] <- 'cereals'
# all_world$gFood[grep(pattern = 'Pulses', x = all_world$food_group, fixed = TRUE)] <- 'pulses'
# all_world$gFood[grep(pattern = 'Alcoholic beverages', x = all_world$food_group, fixed = TRUE)] <- 'alcoholic'
# all_world$gFood[grep(pattern = 'Starchy roots', x = all_world$food_group, fixed = TRUE)] <- 'roots'
# all_world$gFood[grep(pattern = 'Spices', x = all_world$food_group, fixed = TRUE)] <- 'spices'
# all_world$gFood[grep(pattern = 'Stimulants', x = all_world$food_group, fixed = TRUE)] <- 'stimulants'
# all_world$gFood[grep(pattern = 'Oilcrops', x = all_world$food_group, fixed = TRUE)] <- 'oilcrops'
# all_world$gFood[grep(pattern = 'Miscellaneous', x = all_world$food_group, fixed = TRUE)] <- 'miscellaneous'
# all_world$gFood[grep(pattern = 'Vegetables', x = all_world$food_group, fixed = TRUE)] <- 'vegetables'
# all_world$gFood[grep(pattern = 'Sugarcrops', x = all_world$food_group, fixed = TRUE)] <- 'sugarcrops'
all_world$gFood[grep(pattern = 'Cereals', x = all_world$food_group, fixed = TRUE)] <- 'cereals'
all_world$gFood[grep(pattern = 'Animal products', x = all_world$food_group, fixed = TRUE)] <- 'animal'
all_world$gFood[grep(pattern = 'Starchy roots', x = all_world$food_group, fixed = TRUE)] <- 'roots'
all_world$gFood[grep(pattern = 'Oilcrops', x = all_world$food_group, fixed = TRUE)] <- 'oilcrops'
all_world$gFood[grep(pattern = 'Sugarcrops', x = all_world$food_group, fixed = TRUE)] <- 'sugarcrops'
all_world <- all_world[complete.cases(all_world),]; rownames(all_world) <- 1:nrow(all_world)
all_world$Columns <- paste(all_world$gFood, '_', gsub(pattern = ' ', replacement = '_', x = all_world$Item, fixed = TRUE), sep = '')
all_world$Columns <- gsub(pattern = ',', replacement = '', x = all_world$Columns, fixed = TRUE)
options(scipen = 999); options(warn = -1)
library(dplyr)
library(tidyr)
library(ggplot2)
library(caroline)
# load global diet data
all_data <- read.csv('all_1961_2009_final_analysis_data_completeready.csv')
gFood <- read.csv('FBS_commodities_foodgroups_regions_finaltest.csv')
gFood <- gFood %>% select(1:2) %>% unique
all_data2 <- left_join(all_data, gFood, by=c('Item'))
rm(all_data, gFood)
all_data2 <- all_data2 %>% tidyr::gather(Year, Value, Y1961:Y2009)
all_data2$Year <- as.numeric(gsub(pattern='Y', replacement='', x=all_data2$Year))
options(scipen = 999); options(warn = -1)
library(dplyr)
library(tidyr)
library(ggplot2)
library(caroline)
all_data <- read.csv('all_1961_2009_final_analysis_data_completeready.csv')
gFood <- read.csv('FBS_commodities_foodgroups_regions_finaltest.csv')
head(gFood)
gFood <- gFood %>% select(Item:food_group) %>% unique
gFood <- gFood %>% select(Item, food_group) %>% unique
gFood <- gFood %>% select('Item', 'food_group') %>% unique
gFood <- gFood %>% select(1:2) %>% unique
gFood <- gFood %>% dplyr::select(1:2) %>% unique
gFood <- gFood %>% dplyr::select(Item:food_group) %>% unique
options(scipen = 999); options(warn = -1)
# load packages
library(dplyr)
library(tidyr)
library(ggplot2)
library(caroline)
# load global diet data
all_data <- read.csv('all_1961_2009_final_analysis_data_completeready.csv')
# load food groups
gFood <- read.csv('FBS_commodities_foodgroups_regions_finaltest.csv')
gFood <- gFood %>% dplyr::select(Item:food_group) %>% unique
View(gFood)
?left_join
all_data2 <- dplyr::left_join(all_data, gFood, by=c('Item'))
rm(all_data, gFood)
all_data2 <- all_data2 %>% tidyr::gather(Year, Value, Y1961:Y2009)
all_data2$Year <- as.numeric(gsub(pattern='Y', replacement='', x=all_data2$Year))
all_world <- all_data2 %>% group_by(Item, Element, Unit, food_group, Year) %>% summarise(sum(Value, na.rm = TRUE))
colnames(all_world)[ncol(all_world)] <- 'Value'
all_world$Item <- as.character(all_world$Item)
all_world$Element <- as.character(all_world$Element)
all_world$Unit <- as.character(all_world$Unit)
all_world$food_group <- as.character(all_world$food_group)
all_world$Value <- round(all_world$Value, 1)
all_world$gFood <- NA
all_world$gFood[grep(pattern = 'Cereals', x = all_world$food_group, fixed = TRUE)] <- 'cereals'
all_world$gFood[grep(pattern = 'Animal products', x = all_world$food_group, fixed = TRUE)] <- 'animal'
all_world$gFood[grep(pattern = 'Starchy roots', x = all_world$food_group, fixed = TRUE)] <- 'roots'
all_world$gFood[grep(pattern = 'Oilcrops', x = all_world$food_group, fixed = TRUE)] <- 'oilcrops'
all_world$gFood[grep(pattern = 'Sugarcrops', x = all_world$food_group, fixed = TRUE)] <- 'sugarcrops'
all_world <- all_world[complete.cases(all_world),]; rownames(all_world) <- 1:nrow(all_world)
all_world$Columns <- paste(all_world$gFood, '_', gsub(pattern = ' ', replacement = '_', x = all_world$Item, fixed = TRUE), sep = '')
all_world$Columns <- gsub(pattern = ',', replacement = '', x = all_world$Columns, fixed = TRUE)
View(all_world)
head(all_world)
all_world <- all_world %>% mutate(year1960 = Year - 1960)
View(all_world)
by_gFood <- all_world %>%
group_by(Element, gFood) %>%
nest()
head(all_world)
country_model <- function(df){
lm(Value ~ year1960, data=df)
}
models <- by_gFood %>%
mutate(
model = data %>% map(country_model)
)
models
models <- models %>%
mutate(
glance  = model %>% map(broom::glance),
rsq     = glance %>% map_dbl("r.squared"),
tidy    = model %>% map(broom::tidy),
augment = model %>% map(broom::augment)
)
models
models %>%
ggplot(aes(rsq, reorder(gFood, rsq))) +
geom_point(aes(colour = Element))
models %>%
unnest(tidy) %>%
select(Element, gFood, term, estimate, rsq) %>%
spread(term, estimate) %>%
ggplot(aes(`(Intercept)`, year1950)) +
geom_point(aes(colour = Element, size = rsq)) +
geom_smooth(se = FALSE) +
xlab("Life Expectancy (1950)") +
ylab("Yearly improvement") +
scale_size_area()
models %>%
unnest(tidy) %>%
dplyr::select(Element, gFood, term, estimate, rsq) %>%
spread(term, estimate) %>%
ggplot(aes(`(Intercept)`, year1950)) +
geom_point(aes(colour = Element, size = rsq)) +
geom_smooth(se = FALSE) +
xlab("Life Expectancy (1950)") +
ylab("Yearly improvement") +
scale_size_area()
models %>%
unnest(tidy) %>%
dplyr::select(Element, gFood, term, estimate, rsq) %>%
spread(term, estimate) %>%
ggplot(aes(`(Intercept)`, year1960)) +
geom_point(aes(colour = Element, size = rsq)) +
geom_smooth(se = FALSE) +
xlab("Life Expectancy (1950)") +
ylab("Yearly improvement") +
scale_size_area()
View(all_data2)
all_data2 <- all_data2 %>% mutate(year1960 = Year - 1960)
hist(all_data2$Value)
names(all_data2)
head(all_data2)
by_country <- all_data2 %>%
filter(Element == "Fat supply quantity (g/capita/day)" & food_group == "Animal products")
group_by(Element, gFood) %>%
nest()
options(scipen = 999); options(warn = -1)
# load packages
library(dplyr)
library(tidyr)
library(ggplot2)
library(caroline)
# load global diet data
all_data <- read.csv('all_1961_2009_final_analysis_data_completeready.csv')
# load food groups
gFood <- read.csv('FBS_commodities_foodgroups_regions_finaltest.csv')
gFood <- gFood %>% dplyr::select(Item:food_group) %>% unique
all_data2 <- dplyr::left_join(all_data, gFood, by=c('Item'))
rm(all_data, gFood)
all_data2 <- all_data2 %>% tidyr::gather(Year, Value, Y1961:Y2009)
all_data2$Year <- as.numeric(gsub(pattern='Y', replacement='', x=all_data2$Year))
all_data2 <- all_data2 %>% mutate(year1960 = Year - 1960)
head(all_data2)
by_country <- all_data2 %>%
filter(Element == "Fat supply quantity (g/capita/day)")
group_by(food_group, Country) %>%
nest()
g = gc()
rm(list=ls())
options(scipen = 999); options(warn = -1)
# load packages
library(dplyr)
library(tidyr)
library(ggplot2)
library(caroline)
# load global diet data
all_data <- read.csv('all_1961_2009_final_analysis_data_completeready.csv')
# load food groups
gFood <- read.csv('FBS_commodities_foodgroups_regions_finaltest.csv')
gFood <- gFood %>% dplyr::select(Item:food_group) %>% unique
all_data2 <- dplyr::left_join(all_data, gFood, by=c('Item'))
rm(all_data, gFood)
all_data2 <- all_data2 %>% tidyr::gather(Year, Value, Y1961:Y2009)
all_data2$Year <- as.numeric(gsub(pattern='Y', replacement='', x=all_data2$Year))
View(all_data2)
all_data2 <- all_data2 %>% mutate(year1960 = Year - 1960)
head(all_data2)
by_country <- all_data2 %>%
filter(Item == "Animal Products (Total)")
group_by(Element, Country) %>%
nest()
head(all_data2)
by_country <- all_data2 %>%
filter(Item == "Animal Products (Total)")
group_by(Element, Country) %>%
nest()
all_data2 %>%
filter(Item == "Animal Products (Total)") %>% View
# Changing global diet - Processing data
# H. Achicanoy
# CIAT, 2016
# change R options
options(scipen = 999); options(warn = -1)
# load packages
library(dplyr)
library(tidyr)
library(ggplot2)
library(caroline)
# load global diet data
all_data <- read.csv('all_1961_2009_final_analysis_data_completeready.csv')
# load food groups
gFood <- read.csv('FBS_commodities_foodgroups_regions_finaltest.csv')
gFood <- gFood %>% dplyr::select(Item:food_group) %>% unique
all_data2 <- dplyr::left_join(all_data, gFood, by=c('Item'))
rm(all_data, gFood)
all_data2 <- all_data2 %>% tidyr::gather(Year, Value, Y1961:Y2009)
all_data2$Year <- as.numeric(gsub(pattern='Y', replacement='', x=all_data2$Year))
all_data2 <- all_data2 %>% mutate(year1960 = Year - 1960)
all_data2 <- all_data2 %>%
filter(Item == "Animal Products (Total)")
names(all_data2)
all_data2 %>%
group_by(Element, Country) %>%
nest()
by_country <- all_data2 %>%
group_by(Element, Country) %>%
nest()
country_model <- function(df){
lm(Value ~ year1960, data=df)
}
country_model <- function(df){
lm(Value ~ year1960, data=df)
}
# run the linear model to each data frame nested and saving continent, country and linear model
models <- by_country %>%
mutate(
model = data %>% map(country_model)
)
models
library(purrr)
library(broom)
library(dplyr)
library(tidyr)
library(ggplot2)
library(caroline)
library(purrr)
library(broom)
library(ggplot2)
country_model <- function(df){
lm(Value ~ year1960, data=df)
}
# run the linear model to each data frame nested and saving continent, country and linear model
models <- by_country %>%
mutate(
model = data %>% map(country_model)
)
models
models <- models %>%
mutate(
glance  = model %>% map(broom::glance),
rsq     = glance %>% map_dbl("r.squared"),
tidy    = model %>% map(broom::tidy),
augment = model %>% map(broom::augment)
)
models
models %>%
ggplot(aes(rsq, reorder(Country, rsq))) +
geom_point(aes(colour = Element))
models %>%
unnest(tidy) %>%
dplyr::select(Element, Country, term, estimate, rsq) %>%
spread(term, estimate) %>%
ggplot(aes(`(Intercept)`, year1960)) +
geom_point(aes(colour = Element, size = rsq)) +
geom_smooth(se = FALSE) +
xlab("Life Expectancy (1950)") +
ylab("Yearly improvement") +
scale_size_area()
models %>%
unnest(augment) %>%
ggplot(aes(year1960, .resid)) +
geom_line(aes(group = Country), alpha = 1/3) +
geom_smooth(se = FALSE) +
geom_hline(yintercept = 0, colour = "white") +
facet_wrap(~continent)
models %>%
unnest(augment) %>%
ggplot(aes(year1960, .resid)) +
geom_line(aes(group = Country), alpha = 1/3) +
geom_smooth(se = FALSE) +
geom_hline(yintercept = 0, colour = "white") +
facet_wrap(~Element)
models %>%
unnest(tidy) %>%
dplyr::select(Element, Country, term, estimate, rsq) %>%
spread(term, estimate) %>%
ggplot(aes(`(Intercept)`, year1960)) +
geom_point(aes(colour = Element, size = rsq)) +
geom_smooth(se = FALSE) +
xlab("Animal products consumption") +
ylab("Yearly improvement") +
scale_size_area()
version()
??version()
R.Version()
